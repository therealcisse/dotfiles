if v:progname == 'vi'
  set noloadplugins
endif

let mapleader="\<Space>"
let maplocalleader="\\"

" Extension -> filetype mappings.
let filetype_m='objc'
let filetype_pl='prolog'

" Stark highlighting is enough to see the current match; don't need the
" centering, which can be annoying.
let g:LoupeCenterResults=0

" And it turns out that if we're going to turn off the centering, we don't even
" need the mappings; see: https://github.com/wincent/loupe/pull/15
" Using <F13> instead of <Nop> to avoid messing with "<" mappings.
nmap <F13><F1> <Plug>(LoupeN)
nmap <F13><F2> <Plug>(Loupen)

" Stop Ferret from binding <Leader>l, which we want to keep for interactions
" with the language server client (the rare-ish times I want :Lack, I can just
" type it out).
map <F13><F3> <Plug>(FerretLack)

" Prevent tcomment from making a zillion mappings (we just want the operator).
let g:tcomment_mapleader1=''
let g:tcomment_mapleader2=''
let g:tcomment_mapleader_comment_anyway=''
let g:tcomment_textobject_inlinecomment=''

" The default (g<) is a bit awkward to type.
let g:tcomment_mapleader_uncomment_anyway='gu'

" Turn off most of the features of this plug-in; I really just want the folding.
let g:vim_markdown_override_foldtext=0
let g:vim_markdown_no_default_key_mappings=1
let g:vim_markdown_emphasis_multiline=0
let g:vim_markdown_conceal=0
let g:vim_markdown_conceal_code_blocks = 0
let g:vim_markdown_frontmatter=1
let g:vim_markdown_new_list_item_indent=0

if filereadable('/usr/local/bin/python3')
  " Avoid search, speeding up start-up.
  let g:python3_host_prog='/usr/local/bin/python3'
endif

" Normally <leader>s (mnemonic: "[s]earch");
" use <leader>f instead (mnemonic: "[f]ind")
nmap <leader>f <Plug>(FerretAckWord)

" Normally <leader>r (mnemonic: "[r]eplace");
" use <leader>s (mnemonic: "[s]ubstitute") instead.
nmap <leader>s <Plug>(FerretAcks)

" Allow for per-machine overrides in ~/.vim/vimrc.local.
let s:vimrc_local=$HOME . '/.vim/vimrc.local'
if filereadable(s:vimrc_local)
  execute 'source ' . s:vimrc_local
endif

if &loadplugins
  if has('packages')
    packadd! applescript.vim
    packadd! command-t
    packadd! corpus
    packadd! ferret
    packadd! loupe
    packadd! neco-ghc
    packadd! pinnacle
    packadd! replay
    packadd! scalpel
    packadd! tcomment_vim
    packadd! terminus
    packadd! typescript-vim
    packadd! vcs-jump
    packadd! vim-ansible-yaml
    packadd! vim-clipper
    packadd! vim-dirvish
    packadd! vim-dispatch
    packadd! vim-docvim
    packadd! vim-easydir
    packadd! vim-eunuch
    packadd! vim-fugitive
    packadd! vim-git
    packadd! vim-javascript
    packadd! vim-json
    packadd! vim-jsx
    packadd! vim-ledger
    packadd! vim-lion
    packadd! vim-markdown
    packadd! vim-operator-user
    packadd! vim-projectionist
    packadd! vim-reason-plus
    packadd! vim-repeat
    packadd! vim-signature
    packadd! vim-slime
    packadd! vim-speeddating
    packadd! vim-surround
    packadd! vim-textobj-comment
    packadd! vim-textobj-rubyblock
    packadd! vim-textobj-user
    packadd! vim-zsh
  else
    source $HOME/.vim/pack/bundle/opt/vim-pathogen/autoload/pathogen.vim
    call pathogen#infect('pack/bundle/opt/{}')
  endif
endif

" Automatic, language-dependent indentation, syntax coloring and other
" functionality.
"
" Must come *after* the `:packadd!` calls above otherwise the contents of
" package "ftdetect" directories won't be evaluated.
filetype indent plugin on
syntax on

" After this file is sourced, plugin code will be evaluated.
" See ~/.vim/after for files evaluated after that.
" See `:scriptnames` for a list of all scripts, in evaluation order.
" Launch Vim with `vim --startuptime vim.log` for profiling info.
"
" To see all leader mappings, including those from plugins:
"
"   vim -c 'set t_te=' -c 'set t_ti=' -c 'map <space>' -c q | sort
